{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "docSidebar": [
      {
        "type": "link",
        "label": "Introduction",
        "href": "/about",
        "docId": "about"
      },
      {
        "type": "category",
        "label": "react-with-native",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Router",
            "href": "/react-with-native/router",
            "docId": "react-with-native/router"
          },
          {
            "type": "link",
            "label": "Store",
            "href": "/react-with-native/store",
            "docId": "react-with-native/store"
          },
          {
            "type": "link",
            "label": "Form inputs",
            "href": "/react-with-native/form-inputs",
            "docId": "react-with-native/form-inputs"
          },
          {
            "type": "link",
            "label": "Forms",
            "href": "/react-with-native/form",
            "docId": "react-with-native/form"
          },
          {
            "type": "link",
            "label": "Modal",
            "href": "/react-with-native/modal",
            "docId": "react-with-native/modal"
          },
          {
            "type": "link",
            "label": "Notifications",
            "href": "/react-with-native/notification",
            "docId": "react-with-native/notification"
          },
          {
            "type": "link",
            "label": "Select input",
            "href": "/react-with-native/select",
            "docId": "react-with-native/select"
          },
          {
            "type": "link",
            "label": "Unsupported things",
            "href": "/react-with-native/unsupported-things",
            "docId": "react-with-native/unsupported-things"
          }
        ],
        "href": "/react-with-native/"
      }
    ]
  },
  "docs": {
    "about": {
      "id": "about",
      "title": "Introduction",
      "description": "Why?",
      "sidebar": "docSidebar"
    },
    "react-with-native/form": {
      "id": "react-with-native/form",
      "title": "Forms",
      "description": "Plug-and-play yet unopinionated and extensible forms constructor for React and React Native apps",
      "sidebar": "docSidebar"
    },
    "react-with-native/form-inputs": {
      "id": "react-with-native/form-inputs",
      "title": "Form inputs",
      "description": "Form inputs provide a set of default form input types that can be used together with rwn form or without it. Please note that we have quite some peer dependencies for these inputs, and the inputs can't be installed separately. We are still looking for ways to reduce the amount of dependencies. If you don't want this, you can just create your own inputs. You could use our inputs as examples and go from there.",
      "sidebar": "docSidebar"
    },
    "react-with-native/modal": {
      "id": "react-with-native/modal",
      "title": "Modal",
      "description": "This library is experimental!",
      "sidebar": "docSidebar"
    },
    "react-with-native/notification": {
      "id": "react-with-native/notification",
      "title": "Notifications",
      "description": "This library is experimental!",
      "sidebar": "docSidebar"
    },
    "react-with-native/react-with-native": {
      "id": "react-with-native/react-with-native",
      "title": "react-with-native",
      "description": "- Exposes all html elements with their most suitable react-native counterpart, e.g. button, div, strong, label, p, h1, h2, etc.",
      "sidebar": "docSidebar"
    },
    "react-with-native/router": {
      "id": "react-with-native/router",
      "title": "Router",
      "description": "Exposes useNavigation and useRouter which are 1:1 wrappers around useNavigation from react-navigation and useRouter from next/router respectively, and provide the most suitable result on web and native.",
      "sidebar": "docSidebar"
    },
    "react-with-native/select": {
      "id": "react-with-native/select",
      "title": "Select input",
      "description": "It renders a native ActionSheet on iOS, a custom actionsheet on Android, a bottom drawer on mobile web, and either a dropdown select or a context menu on web on big screens, based on if you have children or not.",
      "sidebar": "docSidebar"
    },
    "react-with-native/store": {
      "id": "react-with-native/store",
      "title": "Store",
      "description": "These 164 lines of code without dependencies make it possible to get a simple localStorage/asyncStorage-based and fully typed redux replacement with global persisted storage by default for react and react-native apps.",
      "sidebar": "docSidebar"
    },
    "react-with-native/unsupported-things": {
      "id": "react-with-native/unsupported-things",
      "title": "Unsupported things",
      "description": "Of course, react-with-native doesn't support everything.",
      "sidebar": "docSidebar"
    }
  }
}