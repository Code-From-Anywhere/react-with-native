"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[498],{876:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),f=a,d=m["".concat(p,".").concat(f)]||m[f]||c[f]||o;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8156:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7896),a=n(1461),o=(n(2784),n(876)),i=["components"],s={},p="Forms",u={unversionedId:"react-with-native/form",id:"react-with-native/form",title:"Forms",description:"Plug-and-play yet unopinionated and extensible forms constructor for React and React Native apps with high-class typescript support!",source:"@site/../../docs/react-with-native/form.md",sourceDirName:"react-with-native",slug:"/react-with-native/form",permalink:"/react-with-native/form",draft:!1,editUrl:"https://github.com/Code-From-Anywhere/react-with-native/tree/main/apps/docs/../../docs/react-with-native/form.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Form inputs",permalink:"/react-with-native/form-inputs"},next:{title:"Modal",permalink:"/react-with-native/modal"}},l={},c=[],m={toc:c};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"forms"},"Forms"),(0,o.kt)("p",null,"Plug-and-play yet unopinionated and extensible forms constructor for React and React Native apps with high-class typescript support!"),(0,o.kt)("h1",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-with-native-form\n")),(0,o.kt)("p",null,"Please note:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You need to create your own inputs, or you can use our default inputs, see ",(0,o.kt)("a",{parentName:"li",href:"/react-with-native/form-inputs"},"Form inputs")," for installation instructions"),(0,o.kt)("li",{parentName:"ul"},"You need ",(0,o.kt)("a",{parentName:"li",href:"/react-with-native"},"react-with-native")," for this.")),(0,o.kt)("h1",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Create a wrapper like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import DataForm, {\n  setConfig,\n  makeInputField,\n  Field,\n  Keys,\n  DataFormProps,\n  Plugin,\n} from "react-with-native-form";\n\nimport {\n  TextInput,\n  TextInputType,\n  PasswordInput,\n  PasswordInputType,\n} from "react-with-native-form-inputs";\n\nconst text = { component: TextInput };\nconst password = { component: PasswordInput };\nconst plugins = { text, password };\n\nexport const makeField = <T extends Keys<AllInputs>>(\n  type: T,\n  config: Omit<Field<AllInputs, T>, "type">\n) => makeInputField<AllInputs, T>(type, config);\n\nexport interface AllInputs {\n  text: TextInputType;\n  password: PasswordInputType;\n}\n\nexport const Form = <TState extends { [key: string]: any } = any>(\n  props: DataFormProps<AllInputs, TState>\n) =>\n  setConfig<AllInputs, TState>(DataForm, {\n    plugins,\n  })(props);\n')),(0,o.kt)("p",null,"Now you can create a form like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Form, makeField } from "../components/form";\n\nconst fields = [\n  makeField("text", {\n    field: "username",\n    title: "Username",\n  }),\n  makeField("password", {\n    field: "password",\n    title: "Password",\n  }),\n];\n\n// Now your form can be rendered like this\n// Make sure to provide the generic based on the inputs type interfaces\n// otherwise your form won\'t be typesafe!\n\nconst MyPage = () => {\n  return (\n    <Form<{\n      username: TextInputField["value"];\n      password: PasswordInputType["value"];\n    }>\n      title="Login"\n      fields={fields}\n      onSubmit={(values, resolve, reject) => {\n        //do something with those values\n      }}\n    />\n  );\n};\n')))}f.isMDXComponent=!0}}]);