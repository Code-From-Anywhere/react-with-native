"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[490],{876:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=i,h=f["".concat(p,".").concat(d)]||f[d]||l[d]||o;return n?r.createElement(h,a(a({ref:t},c),{},{components:n})):r.createElement(h,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3236:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=n(7896),i=n(1461),o=(n(2784),n(876)),a=["components"],s={},p="Unsupported things",u={unversionedId:"react-with-native/unsupported-things",id:"react-with-native/unsupported-things",title:"Unsupported things",description:"Of course, react-with-native doesn't support everything.",source:"@site/../../docs/react-with-native/unsupported-things.md",sourceDirName:"react-with-native",slug:"/react-with-native/unsupported-things",permalink:"/react-with-native/unsupported-things",draft:!1,editUrl:"https://github.com/Code-From-Anywhere/react-with-native/tree/main/apps/docs/../../docs/react-with-native/unsupported-things.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Select input",permalink:"/react-with-native/select"}},c={},l=[],f={toc:l};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"unsupported-things"},"Unsupported things"),(0,o.kt)("p",null,"Of course, react-with-native doesn't support everything."),(0,o.kt)("p",null,"It would pretty much be impossible to support all big libraries.\nIt's even quite hard to provide 100% support for everything from react, react-native, and next.js."),(0,o.kt)("p",null,"When something isn't supported by us, it's no big deal. You can easily work around this while still keeping a centralised UI codebase. All you need to do is create platform specific files."),(0,o.kt)("p",null,"By default, the metro-bundler gives priority for files with this pattern: ",(0,o.kt)("inlineCode",{parentName:"p"},"*.ios.ts(x)")," ",(0,o.kt)("inlineCode",{parentName:"p"},"*.android.ts(x)"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"*.native.ts(x)"),". If these files exist, it will not use ",(0,o.kt)("inlineCode",{parentName:"p"},"*.ts(x)")," when importing ",(0,o.kt)("inlineCode",{parentName:"p"},"*"),", but instead go for the platform specific file. Because of this we can create separate files for other platforms if there is something that's not supported by react-with-native."))}d.isMDXComponent=!0}}]);