"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[285],{876:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var r=n(2784);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,i(i({ref:e},s),{},{components:n})):r.createElement(d,i({ref:e},s))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},282:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=n(7896),a=n(1461),o=(n(2784),n(876)),i=["components"],c={},l="Notifications",p={unversionedId:"react-with-native/notification",id:"react-with-native/notification",title:"Notifications",description:"NB: Experimental package!",source:"@site/../../docs/react-with-native/notification.md",sourceDirName:"react-with-native",slug:"/react-with-native/notification",permalink:"/react-with-native/notification",draft:!1,editUrl:"https://github.com/Code-From-Anywhere/react-with-native/tree/main/apps/docs/../../docs/react-with-native/notification.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Modal",permalink:"/react-with-native/modal"},next:{title:"Router",permalink:"/react-with-native/router"}},s={},u=[{value:"<code>NB: Experimental package!</code>",id:"nb-experimental-package",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],f={toc:u};function m(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"notifications"},"Notifications"),(0,o.kt)("h2",{id:"nb-experimental-package"},(0,o.kt)("inlineCode",{parentName:"h2"},"NB: Experimental package!")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"react-with-native-notification")," is a wrapper of react-toastify for web and expo-notifications on iOS and Android"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"For a react project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-with-native-notification react-toastify\n")),(0,o.kt)("p",null,"Also, add this to your root ",(0,o.kt)("inlineCode",{parentName:"p"},"App.tsx")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"_app.tsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import "react-toastify/dist/ReactToastify.css";\n')),(0,o.kt)("p",null,"For a react-native expo project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"expo install react-with-native-notification expo-notifications\n")),(0,o.kt)("p",null,"Also, make sure to follow the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.expo.dev/versions/latest/sdk/notifications/"},"installation instructions")," from the expo docs. You may have to request for permission first. It may not work within expo itself due to permission problems."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"In your apps root:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { ToastContainer } from "react-with-native-notification";\n\n// and in somewhere high up your tree:\n\n<ToastContainer />;\n')),(0,o.kt)("p",null,"When you want to fire a notification:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { toast } from "react-with-native-notification";\n\n<Button onClick={() => toast("Hello world")}>Click me!</Button>;\n')))}m.isMDXComponent=!0}}]);