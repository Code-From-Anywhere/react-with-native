"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[227],{876:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),y=o,f=d["".concat(s,".").concat(y)]||d[y]||p[y]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},321:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(7896),o=r(1461),a=(r(2784),r(876)),i=["components"],l={},s="Storage",c={unversionedId:"react-with-native-store",id:"react-with-native-store",title:"Storage",description:"These 164 lines of code without dependencies make it possible to get a simple localStorage/asyncStorage-based and fully typed redux replacement with global persisted storage by default for react and react-native apps.",source:"@site/../../docs/4.react-with-native-store.md",sourceDirName:".",slug:"/react-with-native-store",permalink:"/react-with-native-store",draft:!1,editUrl:"https://github.com/Code-From-Anywhere/react-with-native/tree/main/apps/docs/../../docs/4.react-with-native-store.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"docSidebar",previous:{title:"Routing",permalink:"/react-with-native-router"},next:{title:"Forms",permalink:"/react-with-native-form"}},u={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],d={toc:p};function y(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storage"},"Storage"),(0,a.kt)("p",null,"These 164 lines of code without dependencies make it possible to get a simple localStorage/asyncStorage-based and fully typed redux replacement with global persisted storage by default for react and react-native apps."),(0,a.kt)("p",null,"Every key has its own context so you won't get too many rerenders."),(0,a.kt)("p",null,"This is not as powerful as redux itself (you ca't define custom selectors, so rerenders will happen in all components where you use the same key), but compared to bare redux, there is way less boilerplate and it's fully typed out of the box."),(0,a.kt)("p",null,"I think that especially for apps with little state this could be a very good choice, and because we have tools like React Query now, most apps won't need a lot of global persisted state anymore."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"yarn add react-with-native-store")),(0,a.kt)("p",null,"for expo, also install this:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"yarn add @react-native-async-storage/async-storage")),(0,a.kt)("p",null,"for bare react-native, also follow ",(0,a.kt)("a",{parentName:"p",href:"https://react-native-async-storage.github.io/async-storage/docs/install/"},"these instructions")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"First create a wrapper and save it somewhere"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { createStoreProvider, createUseStore } from 'react-with-native-store';\n\ntype StoreType = {\n  key1: YourType | null;\n  key2: string | null;\n};\n\nexport const initialValues: StoreType = {\n  key1: null,\n  key2: null,\n};\n\nexport const StoreProvider = createStoreProvider({ initialValues });\nexport const useStore = createUseStore(initialValues);\nexport default useStore;\n\n")),(0,a.kt)("p",null,"Then wrap your app in the StoreProvider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { StoreProvider } from '../store';\n\n\nconst App = () => (\n  <StoreProvider>\n    {/* Other components */}\n    <Component />\n  </StoreProvider>\n);\n\n")),(0,a.kt)("p",null,"Finally, you can use useStore everywhere!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import useStore from \"../store\";\n\nconst YourComponent = () => {\nconst [key1, setKey1] = useStore('key1');\n\n// your code\n};\n\n")),(0,a.kt)("p",null,"Enjoy!"))}y.isMDXComponent=!0}}]);