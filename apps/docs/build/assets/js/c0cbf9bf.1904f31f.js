"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[594],{876:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=u(r),d=o,m=f["".concat(p,".").concat(d)]||f[d]||l[d]||i;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3013:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var n=r(7896),o=r(1461),i=(r(2784),r(876)),a=["components"],s={},p="Unsupported things",u={unversionedId:"extra/unsupported-things",id:"extra/unsupported-things",title:"Unsupported things",description:"Of course, react-with-native doesn't support everything.",source:"@site/../../docs/extra/unsupported-things.md",sourceDirName:"extra",slug:"/extra/unsupported-things",permalink:"/extra/unsupported-things",draft:!1,editUrl:"https://github.com/Code-From-Anywhere/react-with-native/tree/main/apps/docs/../../docs/extra/unsupported-things.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Creating a RWN package",permalink:"/extra/creating-packages"}},c={},l=[],f={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"unsupported-things"},"Unsupported things"),(0,i.kt)("p",null,"Of course, react-with-native doesn't support everything."),(0,i.kt)("p",null,"It would pretty much be impossible to support all big libraries.\nIt's even quite hard to provide 100% support for everything from react, react-native, and next.js."),(0,i.kt)("p",null,"When something isn't supported by us, it's no big deal. You can easily work around this while still keeping a centralised UI codebase. All you need to do is create platform specific files."),(0,i.kt)("p",null,"By default, the metro-bundler gives priority for files with this pattern: ",(0,i.kt)("inlineCode",{parentName:"p"},"*.ios.ts(x)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"*.android.ts(x)"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"*.native.ts(x)"),". If these files exist, it will not use ",(0,i.kt)("inlineCode",{parentName:"p"},"*.ts(x)")," when importing ",(0,i.kt)("inlineCode",{parentName:"p"},"*"),", but instead go for the platform specific file. Because of this we can create separate files for other platforms if there is something that's not supported by react-with-native."))}d.isMDXComponent=!0}}]);